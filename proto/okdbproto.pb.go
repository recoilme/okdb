// Code generated by protoc-gen-go. DO NOT EDIT.
// source: okdbproto.proto

/*
Package okdbproto is a generated protocol buffer package.

It is generated from these files:
	okdbproto.proto

It has these top-level messages:
	CmdSet
	ResErr
*/
package okdbproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// CmdSet definition
type CmdSet struct {
	File string `protobuf:"bytes,1,opt,name=file" json:"file,omitempty"`
	Key  []byte `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Val  []byte `protobuf:"bytes,3,opt,name=val,proto3" json:"val,omitempty"`
}

func (m *CmdSet) Reset()                    { *m = CmdSet{} }
func (m *CmdSet) String() string            { return proto.CompactTextString(m) }
func (*CmdSet) ProtoMessage()               {}
func (*CmdSet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CmdSet) GetFile() string {
	if m != nil {
		return m.File
	}
	return ""
}

func (m *CmdSet) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *CmdSet) GetVal() []byte {
	if m != nil {
		return m.Val
	}
	return nil
}

// ResErr error string
type ResErr struct {
	Err string `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
}

func (m *ResErr) Reset()                    { *m = ResErr{} }
func (m *ResErr) String() string            { return proto.CompactTextString(m) }
func (*ResErr) ProtoMessage()               {}
func (*ResErr) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ResErr) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func init() {
	proto.RegisterType((*CmdSet)(nil), "okdbproto.CmdSet")
	proto.RegisterType((*ResErr)(nil), "okdbproto.ResErr")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for OkdbService service

type OkdbServiceClient interface {
	// Sends a set
	Set(ctx context.Context, in *CmdSet, opts ...grpc.CallOption) (*ResErr, error)
}

type okdbServiceClient struct {
	cc *grpc.ClientConn
}

func NewOkdbServiceClient(cc *grpc.ClientConn) OkdbServiceClient {
	return &okdbServiceClient{cc}
}

func (c *okdbServiceClient) Set(ctx context.Context, in *CmdSet, opts ...grpc.CallOption) (*ResErr, error) {
	out := new(ResErr)
	err := grpc.Invoke(ctx, "/okdbproto.OkdbService/Set", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for OkdbService service

type OkdbServiceServer interface {
	// Sends a set
	Set(context.Context, *CmdSet) (*ResErr, error)
}

func RegisterOkdbServiceServer(s *grpc.Server, srv OkdbServiceServer) {
	s.RegisterService(&_OkdbService_serviceDesc, srv)
}

func _OkdbService_Set_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CmdSet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OkdbServiceServer).Set(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/okdbproto.OkdbService/Set",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OkdbServiceServer).Set(ctx, req.(*CmdSet))
	}
	return interceptor(ctx, in, info, handler)
}

var _OkdbService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "okdbproto.OkdbService",
	HandlerType: (*OkdbServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Set",
			Handler:    _OkdbService_Set_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "okdbproto.proto",
}

func init() { proto.RegisterFile("okdbproto.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 174 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcf, 0xcf, 0x4e, 0x49,
	0x2a, 0x28, 0xca, 0x2f, 0xc9, 0xd7, 0x03, 0x93, 0x42, 0x9c, 0x70, 0x01, 0x25, 0x07, 0x2e, 0x36,
	0xe7, 0xdc, 0x94, 0xe0, 0xd4, 0x12, 0x21, 0x21, 0x2e, 0x96, 0xb4, 0xcc, 0x9c, 0x54, 0x09, 0x46,
	0x05, 0x46, 0x0d, 0xce, 0x20, 0x30, 0x5b, 0x48, 0x80, 0x8b, 0x39, 0x3b, 0xb5, 0x52, 0x82, 0x49,
	0x81, 0x51, 0x83, 0x27, 0x08, 0xc4, 0x04, 0x89, 0x94, 0x25, 0xe6, 0x48, 0x30, 0x43, 0x44, 0xca,
	0x12, 0x73, 0x94, 0xa4, 0xb8, 0xd8, 0x82, 0x52, 0x8b, 0x5d, 0x8b, 0x8a, 0x40, 0x72, 0xa9, 0x45,
	0x45, 0x50, 0x03, 0x40, 0x4c, 0x23, 0x1b, 0x2e, 0x6e, 0xff, 0xec, 0x94, 0xa4, 0xe0, 0xd4, 0xa2,
	0xb2, 0xcc, 0xe4, 0x54, 0x21, 0x5d, 0x2e, 0x66, 0x90, 0x4d, 0x82, 0x7a, 0x08, 0x07, 0x41, 0x2c,
	0x97, 0x42, 0x16, 0x82, 0x98, 0xa6, 0xc4, 0xe0, 0xa4, 0xc8, 0x25, 0x94, 0x5f, 0x94, 0x0e, 0x96,
	0x41, 0x48, 0x3b, 0x71, 0x82, 0x4c, 0x0c, 0x00, 0x31, 0x03, 0x18, 0x93, 0xd8, 0xc0, 0x62, 0xc6,
	0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x49, 0xb0, 0x34, 0x4f, 0xe3, 0x00, 0x00, 0x00,
}
